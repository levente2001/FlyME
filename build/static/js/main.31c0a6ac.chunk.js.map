{"version":3,"sources":["assets/plane.png","utils/firebase.js","components/auth.js","components/loader.js","pages/home.js","utils/i18n.js","utils/helpers.js","pages/login.js","pages/signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","process","REACT_APP_FIREBASE_CONFIG","console","error","log","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","email","password","a","firebase","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","authStates","withAuth","WrappedComponent","props","handler","state","user","undefined","authState","length","unsubscribe","this","setState","bind","onAuthStateChanged","React","Component","Loader","className","handleSignOut","then","catch","e","toggleMobileMenu","prevState","showMobileMenu","to","onClick","en","GREETINGS","SIGNUP","LOGIN","FORM_FIELDS","NAME","EMAIL","PASSWORD","RETYPE_PASSWORD","SIGNUP_ALT_TEXT","LOGIN_ALT_TEXT","ERRORS","EMPTY_EMAIL","INVALID_EMAIL","EMPTY_PASSWORD","PASSWORD_MISMATCH","AUTH","validateEmailPassword","msg","test","validateEmail","validatePassword","retype","handleInputChange","handleSubmit","event","target","value","name","preventDefault","errorMsg","signIn","onSubmit","src","plane","alt","type","placeholder","onChange","required","id","createNewUser","code","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.31c0a6ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plane.b6105883.png\";","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nif (!process.env.REACT_APP_FIREBASE_CONFIG) {\n  console.error(\"REACT_APP_FIREBASE_CONFIG must be defined\");\n  console.log(\"ENV: \", process.env);\n}\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBiHEwEm7xUXnkbCjRPMT2bhbGVAxg8lpM\",\n  authDomain: \"uberforplanes.firebaseapp.com\",\n  projectId: \"uberforplanes\",\n  storageBucket: \"uberforplanes.appspot.com\",\n  messagingSenderId: \"333900224975\",\n  appId: \"1:333900224975:web:2f4aa920a2123f9ffb1aba\",\n  measurementId: \"G-BZ6R6RF1C7\"\n};\n\nexport function initialize() {\n  // Initialize Firebase\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  }\n}\n\nexport function attachAuthListener(handler) {\n  return firebase.auth().onAuthStateChanged(user => {\n    handler(user);\n  });\n}\n\nexport async function createNewUser(email, password) {\n  await firebase.auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport async function signIn(email, password) {\n  await firebase.auth().signInWithEmailAndPassword(email, password);\n}\n\nexport async function signOut() {\n  await firebase.auth().signOut();\n}\n","import React from \"react\";\n\nimport { initialize, attachAuthListener } from \"../utils/firebase\";\n\nexport const authStates = {\n  INITIAL_VALUE: \"unknown\",\n  LOGGED_IN: \"logged_in\",\n  LOGGED_OUT: \"logged_out\",\n};\n\nexport function withAuth(WrappedComponent) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        user: undefined,\n        authState: authStates.INITIAL_VALUE,\n      };\n\n      initialize();\n      this.unsubscribe = attachAuthListener(\n        function(user) {\n          if (user) {\n            this.setState({\n              user: user,\n              authState: authStates.LOGGED_IN,\n            });\n          } else {\n            this.setState({\n              user: user,\n              authState: authStates.LOGGED_OUT,\n            });\n          }\n        }.bind(this)\n      );\n    }\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    render() {\n      return (\n        <WrappedComponent\n          authState={this.state.authState}\n          user={this.state.user}\n          {...this.props}\n        />\n      );\n    }\n  };\n}\n","import React from \"react\";\n\nimport \"../styles/loader.css\";\n\nexport default function Loader() {\n  return <div className=\"loader\"></div>;\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { authStates, withAuth } from \"../components/auth\";\nimport { signOut } from \"../utils/firebase\";\nimport Loader from \"../components/loader\";\nimport { FaBars, FaTimes } from 'react-icons/fa';\n\nfunction handleSignOut() {\n  signOut()\n    .then(() => {\n      console.log(\"Signed Out\");\n    })\n    .catch(e => {\n      console.log(\"Error signing out\", e);\n    });\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMobileMenu: false,\n    };\n  }\n\n  toggleMobileMenu = () => {\n    this.setState(prevState => ({ showMobileMenu: !prevState.showMobileMenu }));\n  };\n\n  render() {\n    if (this.props.authState === authStates.INITIAL_VALUE) {\n      return <Loader />;\n    }\n\n    if (this.props.authState === authStates.LOGGED_OUT) {\n      return <Redirect to=\"/login\"></Redirect>;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"navbar\">\n          <div className=\"padding80\">\n            <p>Welcome, let's fly!</p>\n            <button className=\"menu-button\" onClick={this.toggleMobileMenu}>\n              {this.state.showMobileMenu ? <FaTimes /> : <FaBars />}\n            </button>\n            <div className={`mobile-menu ${this.state.showMobileMenu ? 'open' : ''}`}>\n              <button className=\"buttonsidebarback\" onClick={this.toggleMobileMenu}>&lt;</button>\n              <button className=\"buttonsidebar\" onClick={handleSignOut}> Sign Out </button>\n              <button className=\"buttonsidebar\"> Profile </button>\n            </div>\n            <div className=\"navbar-items\">\n              <button onClick={handleSignOut}> Sign Out </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Home);\n","const en = {\n  GREETINGS: {\n    SIGNUP: \"Sign Up\",\n    LOGIN: \"Login\",\n  },\n\n  FORM_FIELDS: {\n    NAME: \"Name\",\n    EMAIL: \"E-mail\",\n    PASSWORD: \"Password\",\n    RETYPE_PASSWORD: \"Retype Password\",\n    SIGNUP: \"Sign Up\",\n    LOGIN: \"Login\",\n    SIGNUP_ALT_TEXT: \"Existing user?\",\n    LOGIN_ALT_TEXT: \"Don't have an account?\",\n  },\n\n  ERRORS: {\n    EMPTY_EMAIL: \"Email is required\",\n    INVALID_EMAIL: \"Invalid email\",\n    EMPTY_PASSWORD: \"Password is required\",\n    PASSWORD_MISMATCH: \"Passwords do not match\",\n    AUTH: \"Incorrect email/password\",\n  },\n};\n\nexport default en;\n","import en from \"./i18n\";\n\nexport function validateEmail(email) {\n  if (!email) {\n    return en.ERRORS.EMPTY_EMAIL;\n  }\n  //Check email regex\n  const emailRegex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n  if (!emailRegex.test(email)) {\n    return en.ERRORS.INVALID_EMAIL;\n  }\n}\n\nexport function validatePassword(password) {\n  if (!password) {\n    return en.ERRORS.EMPTY_PASSWORD;\n  }\n}\n\nexport function validateEmailPassword(email, password) {\n  const msg = validateEmail(email);\n\n  if (msg) {\n    return msg;\n  }\n\n  return validatePassword(password);\n}\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { authStates, withAuth } from \"../components/auth\";\nimport en from \"../utils/i18n\";\nimport Loader from \"../components/loader\";\nimport { signIn } from \"../utils/firebase\";\nimport { validateEmailPassword } from \"../utils/helpers\";\n\nimport plane from '../assets/plane.png';\n\nimport \"../styles/login.css\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      retype: \"\",\n      error: \"\",\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n      error: \"\",\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.error) {\n      return;\n    }\n\n    //Validate email & password\n    const errorMsg = validateEmailPassword(\n      this.state.email,\n      this.state.password\n    );\n\n    if (errorMsg) {\n      this.setState({\n        error: errorMsg,\n      });\n      return;\n    }\n\n    signIn(this.state.email, this.state.password)\n      .then(() => {\n        console.log(\"Signed In\");\n      })\n      .catch(e => {\n        console.log(\"Error signing in\", e);\n        this.setState({\n          error: \"Incorrect email/password\",\n        });\n      });\n  }\n  render() {\n    if (this.props.authState === authStates.INITIAL_VALUE) {\n      return <Loader />;\n    }\n\n    if (this.props.authState === authStates.LOGGED_IN) {\n      return <Redirect to=\"/\"></Redirect>;\n    }\n\n    const errorMsg = this.state.error;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n\n          <div className=\"welcomecard\">\n            <h1>FlyMe!</h1>\n            <img className=\"img\" src={plane} alt=\"description\" />\n          </div>\n\n          <div className=\"inputfield\">\n            <h2>{en.GREETINGS.LOGIN}</h2>\n\n            <input\n              type=\"text\"\n              placeholder={en.FORM_FIELDS.EMAIL}\n              name=\"email\"\n              onChange={this.handleInputChange}\n              required\n            />\n\n            <input\n              type=\"password\"\n              placeholder={en.FORM_FIELDS.PASSWORD}\n              name=\"password\"\n              onChange={this.handleInputChange}\n              required\n            />\n            {errorMsg && <p className=\"error\">{errorMsg}</p>}\n            <button id=\"login-button\" type=\"submit\">\n              Login\n            </button>\n\n            <p>{en.FORM_FIELDS.LOGIN_ALT_TEXT}</p>\n            <Link className=\"link\" to=\"/signup\">Sign up</Link>\n          </div>\n          \n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { authStates, withAuth } from \"../components/auth\";\nimport en from \"../utils/i18n\";\nimport { createNewUser } from \"../utils/firebase\";\nimport Loader from \"../components/loader\";\nimport { validateEmailPassword } from \"../utils/helpers\";\n\nimport \"../styles/login.css\";\nimport plane from '../assets/plane.png';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      retype: \"\",\n      error: \"\",\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value,\n      error: \"\",\n    });\n\n    //Verify that password fields match\n    if (target.type === \"password\") {\n      this.setState(function(state) {\n        if (state.password !== state.retype) {\n          return {\n            error: en.ERRORS.PASSWORD_MISMATCH,\n          };\n        }\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.error) {\n      return;\n    }\n\n    //Validate email & password\n    const errorMsg = validateEmailPassword(\n      this.state.email,\n      this.state.password\n    );\n\n    if (errorMsg) {\n      this.setState({\n        error: errorMsg,\n      });\n      return;\n    }\n\n    createNewUser(this.state.email, this.state.password)\n      .then(() => {\n        console.log(\"Signed Up!\");\n      })\n      .catch(e => {\n        console.log(\"Error signing up\", e);\n        if (e.code === \"auth/email-already-in-use\") {\n          this.setState({\n            error: \"Email already in use\",\n          });\n        }\n      });\n  }\n\n  render() {\n    if (this.props.authState === authStates.INITIAL_VALUE) {\n      return <Loader />;\n    }\n\n    if (this.props.authState === authStates.LOGGED_IN) {\n      return <Redirect to=\"/\"></Redirect>;\n    }\n\n    const errorMsg = this.state.error;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"welcomecard\">\n            <h1>FlyMe!</h1>\n            <img className=\"img\" src={plane} alt=\"description\" />\n          </div>\n\n          <div className=\"inputfield\">\n            <h2>{en.GREETINGS.SIGNUP}</h2>\n\n            <input\n              type=\"text\"\n              placeholder={en.FORM_FIELDS.EMAIL}\n              name=\"email\"\n              onChange={this.handleInputChange}\n              required\n            />\n\n            <input\n              type=\"password\"\n              placeholder={en.FORM_FIELDS.PASSWORD}\n              name=\"password\"\n              onChange={this.handleInputChange}\n              required\n            />\n\n            <input\n              type=\"password\"\n              placeholder={en.FORM_FIELDS.RETYPE_PASSWORD}\n              name=\"retype\"\n              onChange={this.handleInputChange}\n              required\n            />\n\n            {errorMsg && <p className=\"error\">Error: {errorMsg}</p>}\n            <button type=\"submit\">Signup</button>\n\n            <p>Already a member?</p>\n            <Link className=\"link\" to=\"/login\">Login</Link>  \n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withAuth(SignUp);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport Signup from \"./pages/signup\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <Signup />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}